{"version":3,"sources":["webpack:///./src/components/CV.js","webpack:///./src/components/Portfolios.js","webpack:///./src/components/PostsPreview.js","webpack:///./src/pages/index.js"],"names":["Root","styled","Container","Group","Row","BigTitle","h1","theme","fontSize","SmallTitle","p","palette","lights","Separator","div","spacing","secondary","Summary","Content","Experience","CV","experiences","author","groupedByCategory","groupBy","node","metadata","category","fluid","author_slug","lg","md","sm","author_name","xs","author_email","author_address","map","group","key","capitalize","slug","company","position","dangerouslySetInnerHTML","__html","description","period","Portfolio","reverse","Col","Hero","Portfolios","portfolios","useMouseSpring","xy","onMouseMove","translate","align","title","component","animated","style","transform","interpolate","alt","hero","local","childImageSharp","content","Title","Post","Thumbnail","PostsList","Text","PostsPreview","posts","fixed","objectFit","objectPosition","to","truncate","length","separator","created","Index","data","location","siteTitle","get","siteHeading","Layout","pageQuery"],"mappings":"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","file":"component---src-pages-index-js-a0ebe2eae69fe4687877.js","sourcesContent":["import { capitalize, groupBy, map } from 'lodash'\nimport React from 'react'\nimport { Col, Container, Hidden, Row } from 'react-grid-system'\nimport styled from 'styled-components'\n\nimport theme from '../styles/theme'\n\nconst Root = styled(Container)`\n  max-width: 1640px;\n`\nconst Group = styled(Row)``\n\nconst BigTitle = styled.h1`\n  @media only screen and (max-width: 1024px) {\n    font-size: ${theme.fontSize(2.5)} !important;\n  }\n\n  @media only screen and (max-width: 768px) {\n    font-size: ${theme.fontSize(3.5)} !important;\n  }\n\n  @media only screen and (max-width: 576px) {\n    font-size: ${theme.fontSize(2.5)} !important;\n  }\n`\n\nconst SmallTitle = styled.p`\n  font-size: ${theme.fontSize(3)};\n  color: ${theme.palette.lights[90]};\n  font-family: 'Tinos', 'Georgia', 'Cambria', 'Times New Roman', 'Times', serif !IMPORTANT;\n  @media only screen and (max-width: 768px) {\n    font-size: ${theme.fontSize(2.5)} !important;\n  }\n\n  @media only screen and (max-width: 576px) {\n    font-size: ${theme.fontSize(1.5)} !important;\n  }\n`\n\nconst Separator = styled.div`\n  width: 100%;\n  height: ${theme.spacing(4)};\n  position: relative;\n  z-index: 0;\n  border: 2px solid ${theme.palette.lights[50]};\n  margin-top: ${theme.spacing(5)};\n  margin-bottom: ${theme.spacing(5)};\n\n  &:before {\n    width: 100%;\n    content: '';\n    z-index: -1;\n    height: 100%;\n    display: block;\n    position: absolute;\n    bottom: calc(-1 * ${theme.spacing(2)});\n    right: calc(-1 * ${theme.spacing(2)});\n    background: ${theme.palette.secondary};\n  }\n`\n\nconst Summary = styled(Row)`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${theme.spacing(5)};\n`\n\nconst Content = styled.div`\n  max-width: 800px;\n`\nconst Experience = styled.div`\n  margin-bottom: ${theme.spacing(6)};\n\n  @media only screen and (max-width: 576px) {\n    margin-bottom: ${theme.spacing(5.5)};\n  }\n`\n\nexport default function CV({ experiences, author }) {\n  const groupedByCategory = groupBy(\n    experiences,\n    ({ node }) => node.metadata.category\n  )\n\n  return (\n    <Root fluid>\n      <SmallTitle>cv.</SmallTitle>\n      <BigTitle>@{author.author_slug}</BigTitle>\n      <Separator> </Separator>\n      <Summary>\n        <Col lg={3} md={4} sm={6}>\n          <h5>\n            <strong>{author.author_name}</strong>\n          </h5>\n        </Col>\n        <Hidden sm xs>\n          <Col lg={3} md={4} sm={6}>\n            <h5>\n              <strong>{author.author_email}</strong>\n            </h5>\n          </Col>\n        </Hidden>\n        <Col lg={6} md={4} sm={6}>\n          <h5>\n            <strong>{author.author_address}</strong>\n          </h5>\n        </Col>\n      </Summary>\n      {map(groupedByCategory, (group, key) => (\n        <Group key={key}>\n          <Col lg={3} md={4}>\n            <h5>\n              <strong>{capitalize(key)}</strong>\n            </h5>\n          </Col>\n          <Col lg={6} md={8}>\n            <Content>\n              {map(group, ({ node }) => (\n                <Experience key={node.slug}>\n                  {(node.metadata.company || node.metadata.position) && (\n                    <h5>\n                      {node.metadata.company}\n                      {node.metadata.position && ` - ${node.metadata.position}`}\n                    </h5>\n                  )}\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: node.metadata.description,\n                    }}\n                  />\n                  <small>{node.metadata.period}</small>\n                </Experience>\n              ))}\n            </Content>\n          </Col>\n        </Group>\n      ))}\n    </Root>\n  )\n}\n","import Image from 'gatsby-image'\nimport React, { useState } from 'react'\nimport { Col, Container, Hidden, Row, Visible } from 'react-grid-system'\nimport { animated } from 'react-spring'\nimport styled from 'styled-components'\n\nimport theme from '../styles/theme'\nimport { useMouseSpring } from '../utils/hooks'\n\nconst Root = styled(Container)`\n  max-width: 1640px;\n`\n\nconst Portfolio = styled(Row)`\n  margin-bottom: ${theme.spacing(8)};\n  ${({ reverse }) => reverse && 'flex-direction: row-reverse'};\n\n  @media only screen and (max-width: 768px) {\n    margin-bottom: ${theme.spacing(6)};\n  }\n  @media only screen and (max-width: 576px) {\n    padding-bottom: ${theme.spacing(4)};\n  }\n`\n\nconst Content = styled(Col)`\n  @media only screen and (max-width: 768px) {\n    margin-top: ${theme.spacing(4)};\n  }\n`\n\nconst Hero = styled(Col)`\n  z-index: 0;\n  position: relative;\n  width: 100%;\n  margin-top: ${theme.spacing(7)};\n\n  &:before {\n    width: calc(100% - 30px);\n    content: '';\n    z-index: -1;\n    height: calc(100% - 30px);\n    display: block;\n    position: absolute;\n\n    border: 2px solid ${theme.palette.lights[50]};\n    transform: translate(\n      calc(-1 * ${theme.spacing(6)}),\n      calc(-1 * ${theme.spacing(6)})\n    );\n\n    ${({ reverse }) =>\n      reverse &&\n      `transform: translate(calc(${theme.spacing(6)}),\n       calc(-1 * ${theme.spacing(6)}));`}\n  }\n\n  @media only screen and (max-width: 768px) {\n    margin-top: ${theme.spacing(4)};\n\n    &:before {\n      display: none;\n    }\n  }\n`\nconst BigTitle = styled.h1`\n  @media only screen and (max-width: 1024px) {\n    font-size: ${theme.fontSize(2.5)} !important;\n  }\n\n  @media only screen and (max-width: 768px) {\n    font-size: ${theme.fontSize(3.5)} !important;\n  }\n\n  @media only screen and (max-width: 576px) {\n    font-size: ${theme.fontSize(2.5)} !important;\n  }\n`\nconst SmallTitle = styled.p`\n  font-size: ${theme.fontSize(3)};\n  color: ${theme.palette.lights[90]};\n  font-family: 'Tinos', 'Georgia', 'Cambria', 'Times New Roman', 'Times', serif !IMPORTANT;\n  @media only screen and (max-width: 768px) {\n    font-size: ${theme.fontSize(2.5)} !important;\n  }\n\n  @media only screen and (max-width: 576px) {\n    font-size: ${theme.fontSize(1.5)} !important;\n  }\n`\n\nexport default function Portfolios({ portfolios }) {\n  const [xy, onMouseMove, translate] = useMouseSpring()\n  return (\n    <Root fluid onMouseMove={onMouseMove}>\n      {portfolios.map(({ node }, key) => (\n        <Portfolio reverse={key === 1} key={key} align=\"flex-start\">\n          <Visible md sm xs>\n            <Col>\n              <SmallTitle>work.</SmallTitle>\n              <BigTitle>{node.title}</BigTitle>\n            </Col>\n          </Visible>\n          <Hero\n            component={animated.div}\n            lg={7}\n            md={12}\n            reverse={key === 1}\n            style={{\n              transform: xy.interpolate(translate(32)),\n            }}\n          >\n            <Image\n              alt={node.title}\n              fluid={node.metadata.hero.local.childImageSharp.fluid}\n            />\n          </Hero>\n          <Content lg={5} md={12}>\n            <Hidden md sm xs>\n              <SmallTitle>work.</SmallTitle>\n              <BigTitle>{node.title}</BigTitle>\n            </Hidden>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: node.content,\n              }}\n            />\n          </Content>\n        </Portfolio>\n      ))}\n    </Root>\n  )\n}\n","import { Link } from 'gatsby'\nimport Image from 'gatsby-image'\nimport { truncate } from 'lodash'\nimport React from 'react'\nimport { Col, Container, Hidden, Row } from 'react-grid-system'\nimport { animated } from 'react-spring'\nimport styled from 'styled-components'\n\nimport theme from '../styles/theme'\nimport { useMouseSpring } from '../utils/hooks'\n\nconst Root = styled(Container)`\n  max-width: 1640px;\n  margin-bottom: ${theme.spacing(8)};\n\n  @media only screen and (max-width: 768px) {\n    margin-bottom: ${theme.spacing(6)};\n  }\n  @media only screen and (max-width: 576px) {\n    margin-bottom: ${theme.spacing(5)};\n  }\n`\n\nconst Title = styled(Col)`\n  margin-right: ${theme.spacing(6)};\n  @media only screen and (max-width: 768px) {\n    margin-bottom: ${theme.spacing(4)};\n  }\n`\nconst BigTitle = styled.h1`\n  @media only screen and (max-width: 1024px) {\n    font-size: ${theme.fontSize(4)} !important;\n  }\n\n  @media only screen and (max-width: 768px) {\n    font-size: ${theme.fontSize(3.5)} !important;\n  }\n\n  @media only screen and (max-width: 576px) {\n    font-size: ${theme.fontSize(2.5)} !important;\n  }\n`\nconst SmallTitle = styled.p`\n  font-size: ${theme.fontSize(3)};\n  color: ${theme.palette.lights[90]};\n  font-family: 'Tinos', 'Georgia', 'Cambria', 'Times New Roman', 'Times', serif !important;\n  @media only screen and (max-width: 768px) {\n    font-size: ${theme.fontSize(2.5)} !important;\n  }\n\n  @media only screen and (max-width: 576px) {\n    font-size: ${theme.fontSize(1.5)} !important;\n  }\n`\n\nconst Post = styled.div`\n  display: flex;\n  max-width: 720px;\n  margin-bottom: ${theme.spacing(6)};\n\n  &:last-child : {\n    margin-bottom: 0;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding-left: ${theme.spacing(4)};\n  }\n  // @media only screen and (max-width: 576px) {\n  //   flex-direction: column;\n  // }\n`\n\nconst Thumbnail = styled(animated.div)`\n  z-index: 0;\n  position: relative;\n  width: ${theme.spacing(7)};\n  height: ${theme.spacing(7)};\n  min-width: ${theme.spacing(7)};\n  margin-top: ${theme.spacing(4)};\n\n  &:before {\n    width: 100%;\n    content: '';\n    z-index: -1;\n    height: 100%;\n    display: block;\n    position: absolute;\n    transform: translate(\n      calc(-1 * ${theme.spacing(4)}),\n      calc(-1 * ${theme.spacing(4)})\n    );\n    border: 2px solid ${theme.palette.lights[50]};\n  }\n\n  @media only screen and (max-width: 576px) {\n    width: ${theme.spacing(6.5)};\n    height: ${theme.spacing(6.5)};\n\n    &:before {\n      width: ${theme.spacing(6.5)};\n      height: ${theme.spacing(6.5)};\n      transform: translate(\n        calc(-1 * ${theme.spacing(4)}),\n        calc(-1 * ${theme.spacing(4)})\n      );\n    }\n\n    & > div {\n      width: ${theme.spacing(6.5)} !important;\n      height: ${theme.spacing(6.5)} !important;\n    }\n  }\n`\n\nconst PostsList = styled(Col)`\n  margin-left: auto;\n  margin-right: auto;\n`\nconst Text = styled.div`\n  margin-left: ${theme.spacing(5)};\n  display: flex;\n  flex-direction: column;\n\n  & > * {\n    margin-bottom: ${theme.spacing(3)};\n  }\n\n  & > *:last-child {\n    margin-top: auto;\n    margin-bottom: 0;\n  }\n\n  @media only screen and (max-width: 576px) {\n    margin-left: 0;\n  }\n`\n\nexport default function PostsPreview({ posts }) {\n  const [xy, onMouseMove, translate] = useMouseSpring()\n\n  return (\n    <Root fluid onMouseMove={onMouseMove}>\n      <Row>\n        <Title lg={5} md={12}>\n          <SmallTitle>posts.</SmallTitle>\n          <BigTitle>\n            Find\n            <Hidden md sm xs>\n              <br />\n            </Hidden>{' '}\n            latest stories\n          </BigTitle>\n        </Title>\n        <PostsList lg={6} md={12}>\n          {posts.map(({ node }, key) => {\n            return (\n              <Post key={node.slug}>\n                <Thumbnail\n                  style={{\n                    transform: xy.interpolate(translate(32)),\n                  }}\n                >\n                  <Image\n                    fixed={node.metadata.hero.local.childImageSharp.fixed}\n                    objectFit=\"cover\"\n                    objectPosition=\"center\"\n                    alt={node.title}\n                  />\n                </Thumbnail>\n                <Text>\n                  <h5>\n                    <Link to={`/posts/${node.slug}`}>\n                      {node.title || node.slug}\n                    </Link>\n                  </h5>\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: truncate(node.metadata.description, {\n                        length: 90,\n                        separator: /,? +/,\n                      }),\n                    }}\n                  />\n                  <small>{node.created}</small>\n                </Text>\n              </Post>\n            )\n          })}\n        </PostsList>\n      </Row>\n    </Root>\n  )\n}\n","import { graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\n\nimport CV from '../components/CV'\nimport Layout from '../components/Layout'\nimport Portfolios from '../components/Portfolios'\nimport PostsPreview from '../components/PostsPreview'\n\nfunction Index({ data, location }) {\n  const siteTitle = get(data, 'cosmicjsSettings.metadata.site_title')\n  const siteHeading = get(data, 'cosmicjsSettings.metadata.site_description')\n  const posts = get(data, 'allCosmicjsPosts.edges')\n  const portfolios = get(data, 'allCosmicjsPortfolios.edges')\n  const experiences = get(data, 'allCosmicjsExperiences.edges')\n  const author = get(data, 'cosmicjsSettings.metadata')\n\n  return (\n    <Layout\n      location={location}\n      siteTitle={siteTitle}\n      siteHeading={siteHeading}\n      author={author}\n    >\n      <PostsPreview posts={posts} />\n      <Portfolios portfolios={portfolios} />\n      <CV experiences={experiences} author={author} />\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allCosmicjsPosts(sort: { fields: [created], order: DESC }, limit: 3) {\n      edges {\n        node {\n          metadata {\n            description\n            hero {\n              local {\n                childImageSharp {\n                  fixed(width: 128, height: 128) {\n                    ...GatsbyImageSharpFixed_withWebp_tracedSVG\n                  }\n                }\n              }\n            }\n          }\n          slug\n          title\n          created(formatString: \"DD MMMM, YYYY\")\n        }\n      }\n    }\n    cosmicjsSettings(slug: { eq: \"general\" }) {\n      metadata {\n        site_heading\n        site_description\n        site_title\n        author_name\n        author_slug\n        author_email\n        author_address\n        socialmedia\n        author_bio\n        author_avatar {\n          imgix_url\n        }\n      }\n    }\n    allCosmicjsPortfolios(sort: { fields: [created], order: ASC }, limit: 3) {\n      edges {\n        node {\n          metadata {\n            hero {\n              local {\n                childImageSharp {\n                  fluid(maxWidth: 1060) {\n                    ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                  }\n                }\n              }\n            }\n          }\n          slug\n          title\n          content\n          created(formatString: \"DD MMMM, YYYY\")\n        }\n      }\n    }\n    allCosmicjsExperiences(\n      sort: { fields: [created], order: ASC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          metadata {\n            category\n            company\n            position\n            period\n            description\n            address\n          }\n          slug\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}