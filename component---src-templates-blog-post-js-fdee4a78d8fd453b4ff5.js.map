{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/PostHeader.js","webpack:///./src/templates/blog-post.js"],"names":["setConfiguration","defaultScreenClass","gutterWidth","Root","styled","div","postLayout","theme","palette","lights","fill","Layout","data","location","siteTitle","siteHeading","author","children","pathname","authorName","get","authorBio","authorAvatar","Fav","lang","charset","type","id","async","defer","src","name","content","property","imgix_url","secondary","HomeHeader","title","avatar","Footer","postFooter","Logo","img","spacing","Container","Title","h2","shades","fontSize","Date","small","Separator","PostHeader","created","fluid","justify","lg","logo","alt","sm","Back","Link","Prev","Next","primary","Content","BlogPostTemplate","pageContext","post","cosmicjsPosts","previous","next","metadata","description","md","to","dangerouslySetInnerHTML","__html","slug","rel"],"mappings":"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","file":"component---src-templates-blog-post-js-fdee4a78d8fd453b4ff5.js","sourcesContent":["import get from 'lodash/get'\nimport React from 'react'\nimport { setConfiguration } from 'react-grid-system'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\n\nimport theme from '../styles/theme'\nimport Fav from './Fav'\nimport Footer from './Footer'\nimport HomeHeader from './HomeHeader'\n\nsetConfiguration({\n  defaultScreenClass: 'md',\n  gutterWidth: 32,\n})\n\nconst Root = styled.div`\n  overflow: hidden;\n  background: ${({ postLayout }) =>\n    !postLayout ? theme.palette.fill : theme.palette.lights[100]};\n`\n\nexport default function Layout({\n  data,\n  location,\n  siteTitle,\n  siteHeading,\n  author,\n  postLayout = false,\n  children,\n}) {\n  const { pathname } = location\n  const authorName = get(author, 'author_name')\n  const authorBio = get(author, 'author_bio')\n  const authorAvatar = get(author, 'author_avatar')\n\n  return (\n    <Root postLayout={postLayout}>\n      <Fav />\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{siteTitle}</title>\n        <meta charset=\"UTF-8\" />\n        <script\n          type=\"text/javascript\"\n          id=\"hs-script-loader\"\n          async\n          defer\n          src=\"//js-eu1.hs-scripts.com/26003364.js\"\n        ></script>\n        <meta name=\"author\" content={authorName} />\n        <meta property=\"og:url\" content={location} />\n        <meta property=\"og:title\" content={siteTitle} />\n        <meta name=\"og:description\" content={siteHeading} />\n        <meta property=\"og:image\" content={authorAvatar.imgix_url} />\n        <meta name=\"theme-color\" content={theme.palette.secondary} />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      </Helmet>\n      {pathname === '/' && (\n        <header>\n          <HomeHeader\n            title={siteTitle}\n            avatar={authorAvatar}\n            authorBio={authorBio}\n          />\n        </header>\n      )}\n      <main>{children}</main>\n      <footer>\n        <Footer author={author} postFooter={postLayout} />\n      </footer>\n    </Root>\n  )\n}\n","import React from 'react'\nimport { Col, Container, Row } from 'react-grid-system'\nimport styled from 'styled-components'\n\nimport logo from '../../static/logo-dark.svg'\nimport theme from '../styles/theme'\n\nconst Logo = styled.img`\n  margin-top: ${theme.spacing(6)};\n  height: ${theme.spacing(7)};\n  width: ${theme.spacing(7)};\n  margin-bottom: ${theme.spacing(5)};\n`\n\nconst Root = styled(Container)`\n  max-width: 1640px;\n  margin-bottom: ${theme.spacing(6)};\n  text-align: center;\n`\nconst Title = styled.h2`\n  color: ${theme.palette.shades[90]};\n\n  @media only screen and (max-width: 768px) {\n    font-size: ${theme.fontSize(3)} !important;\n  }\n\n  @media only screen and (max-width: 576px) {\n    font-size: ${theme.fontSize(2)} !important;\n  }\n`\nconst Date = styled.small`\n  color: ${theme.palette.shades[50]};\n`\n\nconst Separator = styled.div`\n  width: 100%;\n  height: ${theme.spacing(4)};\n  position: relative;\n  z-index: 0;\n  border: 2px solid ${theme.palette.lights[50]};\n  margin-top: ${theme.spacing(5)};\n  margin-bottom: ${theme.spacing(5)};\n\n  @media only screen and (max-width: 576px) {\n    margin-bottom: 0;\n  }\n\n  &:before {\n    width: 100%;\n    content: '';\n    z-index: -1;\n    height: 100%;\n    display: block;\n    position: absolute;\n    bottom: calc(-1 * ${theme.spacing(2)});\n    right: calc(-1 * ${theme.spacing(2)});\n    background: ${theme.palette.secondary};\n  }\n`\n\nexport default function PostHeader({ title, created }) {\n  return (\n    <Root fluid>\n      <Row justify=\"center\">\n        <Col lg={6}>\n          <Logo src={logo} alt=\"gceico logo\" />\n          <Title>{title}</Title>\n          <Date>{created}</Date>\n        </Col>\n        <Col sm={8}>\n          <Separator> </Separator>\n        </Col>\n      </Row>\n    </Root>\n  )\n}\n","import { graphql, Link } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\nimport { Col, Container, Row } from 'react-grid-system'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\n\nimport Layout from '../components/layout'\nimport PostHeader from '../components/PostHeader'\nimport theme from '../styles/theme'\n\nconst Back = styled(Link)`\n  margin-top: ${theme.spacing(4)};\n  display: block;\n  width: fit-content;\n`\n\nconst Root = styled(Container)`\n  max-width: 1640px;\n`\n\nconst Prev = styled(Link)``\nconst Next = styled(Link)`\n  margin-left: auto;\n  display: block;\n  width: fit-content;\n\n  &:hover {\n    color: ${theme.palette.primary};\n    transition: color 0.25s ease-in;\n  }\n`\n\nconst Content = styled.div`\n  & > * {\n    color: ${theme.palette.shades[80]};\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: ${theme.palette.shades[90]};\n  }\n`\n\nfunction BlogPostTemplate({ data, location, pageContext }) {\n  const post = data.cosmicjsPosts\n  const siteTitle = get(data, 'cosmicjsSettings.metadata.site_title')\n  const author = get(data, 'cosmicjsSettings.metadata')\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} author={author} postLayout>\n      <Root fluid id=\"head-root\">\n        <Helmet>\n          <meta property=\"og:title\" content={`${post.title} | ${siteTitle}`} />\n          <meta name=\"og:description\" content={post.metadata.description} />\n          <meta\n            property=\"og:image\"\n            content={post.metadata.description.imgix_url}\n          />\n        </Helmet>\n        <Row justify=\"center\">\n          <Col lg={6} md={10}>\n            <Back to=\"/posts\">‚Üê Back to Posts</Back>\n          </Col>\n        </Row>\n        <PostHeader title={post.title} created={post.created} />\n        <Row justify=\"center\">\n          <Col lg={6} md={10}>\n            <Content dangerouslySetInnerHTML={{ __html: post.content }} />\n          </Col>\n        </Row>\n\n        <Row justify=\"center\">\n          <Col lg={3} md={5} sm={6}>\n            {previous && (\n              <Prev to={`/posts/${previous.slug}`} rel=\"prev\">\n                ‚Üê {previous.title}\n              </Prev>\n            )}\n          </Col>\n\n          <Col lg={3} md={5} sm={6}>\n            {next && (\n              <Next to={`/posts/${next.slug}`} rel=\"next\">\n                {next.title} ‚Üí\n              </Next>\n            )}\n          </Col>\n        </Row>\n      </Root>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    cosmicjsPosts(slug: { eq: $slug }) {\n      id\n      content\n      title\n      created(formatString: \"MMMM DD, YYYY\")\n      metadata {\n        description\n        hero {\n          imgix_url\n        }\n      }\n    }\n    cosmicjsSettings(slug: { eq: \"general\" }) {\n      metadata {\n        site_title\n        author_name\n        author_bio\n        author_email\n        socialmedia\n        author_avatar {\n          imgix_url\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}